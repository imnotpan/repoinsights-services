version: '3.9'

services:
  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"

  consolidada:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: '${CONSOLIDADA_USER}'
      POSTGRES_DB: 'ghtorrent'
      POSTGRES_PASSWORD: '${CONSOLIDADA_PASS}'
      SCHEMA: '${SCHEMA_CONSOLIDADA}'
    ports:
      - '${CONSOLIDADA_PORT}:${CONSOLIDADA_PORT}'
    expose:
      - '${CONSOLIDADA_PORT}'
    command: -p ${CONSOLIDADA_PORT}
    volumes:
      - ./docker/postgres:/var/lib/postgresql/data
      - ./docker/data:/app
      - ./${SCHEMA_CONSOLIDADA}:/docker-entrypoint-initdb.d/init.sql

  temporal:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: '${TEMP_USER}'
      POSTGRES_DB: 'ghtorrent'
      POSTGRES_PASSWORD: '${TEMP_PASS}'
    ports:
      - '${TEMP_PORT}:${TEMP_PORT}'
    expose:
      - '${TEMP_PORT}'
    command: -p ${TEMP_PORT}
    volumes:
      - ./docker/postgres-temporal:/var/lib/postgresql/data
      - ./docker/data:/app
      - ./${SCHEMA_TEMP}:/docker-entrypoint-initdb.d/init.sql

  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./docker/rabbitmq/:/var/lib/rabbitmq/
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBIT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_PASS}

  extract_service:
    build:
      context: .
      dockerfile: Dockerfile.extract
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - temporal
      - redis
    environment:
      - RABBIT_HOST=rabbitmq
      - TEMP_IP=temporal
      - REDIS_HOST=redis
    deploy:
      replicas: 2

  check_queue:
    build:
      context: .
      dockerfile: Dockerfile.check
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - consolidada
    environment:
      - RABBIT_HOST=rabbitmq
      - CONSOLIDADA_IP=consolidada
volumes:
  db:
  data:
    external: true
  rabbitmq:
  postgres:
  postgres-temporal:
  pgadmin-data:


